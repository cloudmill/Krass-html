.paralax {
  &-box {
    overflow: hidden;
    width: 100%;
    height: 100%;
    position: relative;
    &.size-box{
      height: auto;
    }
  }
  &-item {
    @include performance();
    position: relative;
    top: -90px;
    will-change: transform;
    height: calc(100% + 90px);
  }
  &-size-box{
    opacity: 0;
    pointer-events: none;
    &+.paralax-item{
      position: absolute;
      display: flex;
      left: 50%;
      align-items: center;
      justify-content: center;
      >*{
        position: relative;
        width: auto;
        max-width: none;
        height: 100%;
      }
    }
  }
}
.fixed{
  &-base{

  }
  &-box{

  }
  &-item{
    position: relative;
  }
}
body{
  @media(max-width: 768px){
    height: auto !important;
  }
}
.scroll {
  &-box {
    @include performance();
    position: absolute;
    overflow: hidden;
    z-index: 2;
    transform-style: flat;
    will-change: transform;
    width: 100%;
    @media(max-width: 768px){
      position: relative;
      transform: none !important;
    }
  }
  &-viewport {
    overflow: hidden;
    position: fixed;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    @media(max-width: 768px){
      position: relative;
    }
  }
}

.view-item {
  @include will-change(opacity, null, -1);
}
@mixin animateF($name, $begin, $end) {
  @include performance();
  transform: $begin;
  &.play {
    animation: $name $ease-main both;
    animation-duration: 1s;
  }
  @keyframes #{$name} {
    0% {
      transform: $begin;
    }
    100% {
      transform: $end;
    }
  }
}
.show-item {
  &.showInLeft {
    @include animateF(showInLeft, translateX(-60vw), translateX(0));
    &-self {
      @include animateF(
        showInLeft-self,
        translateX(calc(-100% - 60px)),
        translateX(0)
      );
    }
  }
  &.showInTop {
    @include animateF(showInTop, translateY(-90vh), translateY(0));
    &-self {
      @include animateF(
        showInTop-self,
        translateY(calc(-100% - 60px)),
        translateY(0)
      );
    }
  }
  &.showInBottom {
    @include animateF(showInBottom, translateY(90vh), translateY(0));
    &-self {
      @include animateF(
        showInBottom-self,
        translateY(calc(100% + 60px)),
        translateY(0)
      );
    }
  }
}

.staggers-item {
  i {
    display: block;
    transform-origin: bottom center;
    transition: transform 0.3s ease-in-out;
    pointer-events: none;
    &.hit {
      pointer-events: all;
      position: absolute;
      width: 50%;
      height: 100%;
      left: 0;
      top: 0;
    }
  }
}

.pageSurfing{
  @include opacityHide();
  transition-duration: 0.4s;
  &.active{
    @include opacityShow();
  }
  background-color: white;
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: 19;
}

.lazy-opened{
  overflow: hidden;
  transition: height $ease-main;
  &-but{

  }
  &-box{

  }
}